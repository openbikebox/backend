version: '3'
services:
  flask:
    build:
      context: .
      dockerfile: Dockerfile.flask
    ports:
      - 5000:5000
    container_name: open-bike-box-backend-flask
    volumes:
      - .:/app
    networks:
      open-bike-box-backend:
        aliases:
        - flask
    entrypoint: ["python3", "runserver.py"]

  worker:
    build:
      context: .
      dockerfile: Dockerfile.flask
    container_name: open-bike-box-backend-worker
    volumes:
      - .:/app
    networks:
      open-bike-box-backend:
        aliases:
        - worker
    entrypoint: ["/app/celery.sh"]

  webpack:
    build:
      context: .
      dockerfile: Dockerfile.webpack
    container_name: open-bike-box-backend-webpack
    ports:
    - 8889:8888
    volumes:
      - .:/app
      - open_bike_box_backend_node_modules:/app/node_modules
    networks:
      open-bike-box-backend:
        aliases:
        - webpack
    #entrypoint: ["/app/webpack.sh"]
    entrypoint: ["sleep", "60000"]

  mysql:
    image: mariadb
    container_name: open-bike-box-backend-mysql
    volumes:
      - .:/app
      - open_bike_box_backend_mysql:/var/lib/mysql
    networks:
      open-bike-box-backend:
        aliases:
        - mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: open-bike-box-backend

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: open-bike-box-backend-phpmyadmin
    ports:
      - 8082:80
    networks:
      open-bike-box-backend:
        aliases:
        - phpmyadmin
    environment:
      PMA_USER: root
      PMA_PASSWORD: root
      PMA_HOST: mysql

  redis:
    image: redis
    container_name: open-bike-box-backend-redis
    networks:
      open-bike-box-backend:
        aliases:
        - redis

  rabbitmq:
    image: rabbitmq:latest
    container_name: open-bike-box-backend-rabbitmq
    networks:
      open-bike-box-backend:
        aliases:
        - rabbitmq

volumes:
  open_bike_box_backend_node_modules:
  open_bike_box_backend_mysql:

networks:
  open-bike-box-backend:

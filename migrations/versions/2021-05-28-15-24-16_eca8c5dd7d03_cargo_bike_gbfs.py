"""cargo bike + gbfs

Revision ID: eca8c5dd7d03
Revises: 877460bb55ba
Create Date: 2021-05-28 15:24:16.469093

"""
from alembic import op
import sqlalchemy as sa
from webapp.storage.base import Point


# revision identifiers, used by Alembic.
revision = 'eca8c5dd7d03'
down_revision = '877460bb55ba'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('alert',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('modified', sa.DateTime(), nullable=False),
    sa.Column('operator_id', sa.BigInteger(), nullable=True),
    sa.Column('location_id', sa.BigInteger(), nullable=True),
    sa.Column('resource_id', sa.BigInteger(), nullable=True),
    sa.Column('url', sa.String(length=255), nullable=True),
    sa.Column('type', sa.Enum('other', 'closure', name='alerttype'), nullable=True),
    sa.Column('summary', sa.Text(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('start', sa.DateTime(timezone=True), nullable=True),
    sa.Column('end', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['location_id'], ['location.id'], ),
    sa.ForeignKeyConstraint(['operator_id'], ['operator.id'], ),
    sa.ForeignKeyConstraint(['resource_id'], ['resource.id'], ),
    sa.PrimaryKeyConstraint('id'),
    mysql_charset='utf8',
    mysql_collate='utf8_unicode_ci'
    )
    op.create_table('location_file',
    sa.Column('location_id', sa.BigInteger(), nullable=True),
    sa.Column('file_id', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['file_id'], ['file.id'], ),
    sa.ForeignKeyConstraint(['location_id'], ['location.id'], )
    )
    op.create_table('regular_hours',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('modified', sa.DateTime(), nullable=False),
    sa.Column('location_id', sa.BigInteger(), nullable=True),
    sa.Column('weekday', sa.SmallInteger(), nullable=True),
    sa.Column('period_begin', sa.Integer(), nullable=True),
    sa.Column('period_end', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['location_id'], ['location.id'], ),
    sa.PrimaryKeyConstraint('id'),
    mysql_charset='utf8',
    mysql_collate='utf8_unicode_ci'
    )
    op.create_table('resource_file',
    sa.Column('resource_id', sa.BigInteger(), nullable=True),
    sa.Column('file_id', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['file_id'], ['file.id'], ),
    sa.ForeignKeyConstraint(['resource_id'], ['resource.id'], )
    )
    op.add_column('location', sa.Column('twentyforseven', sa.Boolean(), nullable=True))
    op.add_column('location', sa.Column('geometry', Point(), nullable=False))
    op.add_column('operator', sa.Column('slug', sa.String(length=255), nullable=True))
    op.add_column('operator', sa.Column('url', sa.String(length=255), nullable=True))
    op.add_column('operator', sa.Column('email', sa.String(length=255), nullable=True))
    op.create_index(op.f('ix_operator_slug'), 'operator', ['slug'], unique=True)
    op.add_column('resource', sa.Column('photo_id', sa.BigInteger(), nullable=True))
    op.create_foreign_key(None, 'resource', 'file', ['photo_id'], ['id'], use_alter=True)

    op.execute("CREATE SPATIAL INDEX geometry_index ON location (geometry)")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'resource', type_='foreignkey')
    op.drop_column('resource', 'photo_id')
    op.drop_index(op.f('ix_operator_slug'), table_name='operator')
    op.drop_column('operator', 'email')
    op.drop_column('operator', 'url')
    op.drop_column('operator', 'slug')
    op.drop_column('location', 'geometry')
    op.drop_column('location', 'twentyforseven')
    op.drop_table('resource_file')
    op.drop_table('regular_hours')
    op.drop_table('location_file')
    op.drop_table('alert')
    # ### end Alembic commands ###

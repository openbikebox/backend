stages:
  - build
  - test

default:
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - .npm/
      - .pip/

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.pip"

  # Variables for test environment services
  MYSQL_ROOT_PASSWORD: root
  MYSQL_DATABASE: backend

# Define services for test environment
.test-services:
  services: &test_service_stack
    - name: mariadb:latest
      alias: mysql
    - name: redis:latest
    - name: rabbitmq:latest

# Build stage
build-js:
  stage: build
  image:
    name: node:12
  artifacts:
    paths:
      - static
  script:
    - npm install --cache .npm --prefer-offline
    - npm run build

# Test stage
test-pytest:
  stage: test
  image:
    name: ${CI_REGISTRY}/common/base-images/flask:ubuntu-20.04
  services: *test_service_stack
  artifacts:
    when: always
    reports:
      junit:
        - reports/pytest_unit.xml
        - reports/pytest_integration.xml
  before_script:
    - pip install -r requirements.txt
    - cp config_dist_dev.yaml config.yaml
  script:
    - python -m pytest tests/unit --junitxml=reports/pytest_unit.xml
    - python -m pytest tests/integration --junitxml=reports/pytest_integration.xml
